% !Rnw root = Cockell_main.Rnw

<<echo=FALSE,warning=FALSE, message=FALSE,>>=
library(lumi)
@

\section{Differentially expressed genes}
\subsection{Array annotation}

Oligonucleotide identifiers provided by array manufacturers are technology specific, proprietary and mutable. It was felt that an external identifier would be beneficial to solve the problem of identifier permanency, and enable cross-platform data integration. nuIDs are one implementation of just such a strategy, each nuID is a string of letters and numbers which encode, via a variation of Base64, a lossless compression of the probes sequence in addition to a checksum \cite{Du07}. The probe names on our Illumina arrays can be mapped to nuIDs, and these can then be used to stably map the probes to other identifiers (in this case, gene symbols and gene names).

This annotation is useful for much of the downstream analysis, providing human readable identifiers for genes that can be included in the output of the differential gene detection to come.

<<SC_analysis_IDmapping, message=FALSE>>=
library(lumiHumanAll.db)
library(annotate)
probe_list = rownames(select_data)
nuIDs = probeID2nuID(probe_list)[ ,"nuID"]
symbol = getSYMBOL(nuIDs, "lumiHumanAll.db")
name = unlist(lookUp(nuIDs, "lumiHumanAll.db", "GENENAME"))
@
\noindent To avoid mixing-up order of the IDs and symbols, we combine everything in an R data frame
<<>>=
anno_df = data.frame(ID= nuIDs, probe_list, symbol, name)
@



%% This description needs to be improved! %%
\subsection{Using limma to detect differentially expressed genes}


The \texttt{limma} package has become the de-facto way of analysing microarrays for differentially expressed genes. By using an empirical Bayes method to moderate the variance of observations across the microarrays, \texttt{limma} tends to give more robust gene-lists than those generated by standard Student's $t$-tests. We set our samples up by defining the design of our experiment. The in-built R method \texttt{model.matrix} can be used to do this, the resulting design matrix tells \texttt{limma} which samples belong in which groups. The \texttt{lmFit} method then fits a linear model for each gene in the group of arrays:

<<SC_analysis_design>>=
library(limma)
design = model.matrix(~ 0 + factor(array_names, levels=treatments))
colnames(design) = treatments
num_parameters = ncol(design)
fit = lmFit(select_data, design)
@

\noindent Now we can set up the constrasts, or comparisons, that we want to analyse. In the case of this experiment we have eight sample groups: a control, four individual siRNA knock-downs and three combination knock-downs. We want to analyse the effect of each transcription factor knock-down separately and also detect the presence of any interaction effects. To detect main effect differences, we would have a contrast of the form
\begin{center}
\texttt{TF1} - \texttt{Ctrl}
\end{center}
To investigate interactions, the contrast would be slightly more complicated
\begin{center}
(\texttt{TF1TF4}-\texttt{Ctrl}) - (\texttt{TF1} - \texttt{Ctrl}) - (\texttt{TF4} - \texttt{Ctrl})  =
\texttt{TF1TF4} - \texttt{TF1} - \texttt{TF4} + \texttt{Ctrl}
\end{center}
Using the \texttt{makeContrasts} method provided by \texttt{limma}, we set up the following contrast matrix:
<<SC_analysis_contrasts, tidy=FALSE>>=
cont_mat = makeContrasts(TF1-Ctrl, TF2-Ctrl, TF3-Ctrl, TF4-Ctrl,
                  TF1TF4-TF1-TF4+Ctrl, TF2TF4-TF2-TF4+Ctrl,
                  TF3TF4-TF3-TF4+Ctrl, levels=treatments)
fit2  = contrasts.fit(fit, contrasts=cont_mat)
@
\noindent We then fit these contrasts to the \texttt{limma} model of the data, and apply the empirical Bayes statistics to derive moderated $t$-statistics of differential expression for all the probes on the arrays:
<<fit_contrasts>>=
fit2  = eBayes(fit2)
fit2$genes = anno_df
@
\noindent To enable other functions, notably \texttt{topTable}, to access the gene names we append the \texttt{anno\_df} data frame to the \texttt{fit2} list.

The final stage of the \texttt{limma} analysis is to apply \texttt{topTable} in order to produce a list of differentially expressed genes. \texttt{topTable} takes a number of arguments which allow for precise filtering of the gene list by a number of criteria, including applying a cut-off to the $\log_2$ fold change and the $p$-value of the moderated $t$-tests performed. \texttt{topTable} also allows us to apply a multiple testing correction to the test statistics produced. This is important because utilising "raw" $p$-values in over 20,000 independent statistical tests will lead to an unreasonably high error rate when predicting differentially expressed genes (by definition, a rate of 1 in 20, or around 1,000 false positives per contrast for our arrays). Applying a multiple testing correction allows this error rate to be controlled for, and a lower false positive rate to be guaranteed.
<<SC_analysis_DEG, results='hide', tidy=FALSE, cache=TRUE>>=
## Filter by fold change (1.5x) and p-value (0.05) cutoffs
## Adjusted using Benjimini-Hochberg False Discovery Rate
topTable(fit2, coef="TF1 - Ctrl", p.value=0.05, lfc=log2(1.5))
@

<<echo=FALSE, cache=TRUE>>=
tt = topTable(fit2, coef="TF1 - Ctrl", p.value=0.05, lfc=log(1.5, 2))
tt_gs = tt$symbol
tt_logFC = format_dp(tt$logFC, 3)
tt_adj = sapply(tt$adj.P.Val, sn, 2)
tt_expr = format_dp(tt$AveExpr, 3)
@
\begin{table}[t]
\centering
\begin{tabular}{@{} l l r@{.}l r@{.}l l @{}}
\toprule
Rank & Gene Symbol  & \multicolumn{2}{l}{Mean Expression} & \multicolumn{2}{l}{$\log_2$ Fold Change} & Adjusted $p$-value   \\
\midrule
1 & \Sexpr{tt_gs[1]} & \Sexpr{tt_expr[1]} & \Sexpr{tt_logFC[1]} &  $\Sexpr{tt_adj[1]}$\\
2 & \Sexpr{tt_gs[2]} & \Sexpr{tt_expr[2]} & \Sexpr{tt_logFC[2]} &$\Sexpr{tt_adj[2]}$ \\
3 & \Sexpr{tt_gs[3]} & \Sexpr{tt_expr[3]} & \Sexpr{tt_logFC[3]} &$\Sexpr{tt_adj[3]} $\\
4 & \Sexpr{tt_gs[4]} & \Sexpr{tt_expr[4]} & \Sexpr{tt_logFC[4]} & $\Sexpr{tt_adj[4]}$\\
5 & \Sexpr{tt_gs[5]} & \Sexpr{tt_expr[5]} & \Sexpr{tt_logFC[5]} &$\Sexpr{tt_adj[5]}$  \\
\bottomrule
\end{tabular}
\caption{Top five differentially expression genes for the contrast \texttt{TF1 - Ctrl}.}\label{Cockell_T1}
\end{table}

