<<echo=FALSE>>=
#Set a nice palette of colours
palette(c(rgb(92,147,52, maxColorValue=255), rgb(177,91,210, maxColorValue=255), 
  rgb(210,85,44, maxColorValue=255),
  rgb(106,121,183, maxColorValue=255),
  rgb(54,144,122, maxColorValue=255),
  rgb(160,120,40, maxColorValue=255),
  rgb(192,81,143, maxColorValue=255),
  rgb(199,76,88, maxColorValue=255)))
dpi = 500
@


<<echo=FALSE, cache=TRUE>>=
###Figure 1
#The figures from the affycore can't really be manipulated
#So I've just implemented them myself

###PCA and array densities
colour = TRUE
if(colour) { cols =rep(1:8, each=3); bg = cols
}else{ cols = rep("black", each=24); bg = 0}

#png("graphics/figure1.png", width=12*dpi, height=9*dpi, res=dpi)
pdf("graphics/figure1.pdf", width=6, height=4)
par(mfrow=c(2,3), mar=c(3,3,2,1), 
    mgp=c(2,0.4,0), tck=-.01, las=1)

expr = log2(exprs(raw_data))
d = apply(expr, 2, density)
plot(0, 0, xlim=c(2, 16), ylim=c(0, 2.2), 
     xlab=expression(paste(log[2], " Intensity")), ylab="Density",
     panel.first=grid(), axes=FALSE, frame=TRUE)

for(i in seq_along(d)) {
  lines(d[[i]]$x, d[[i]]$y, col=cols[i], lty=3, lwd=0.5)
}
abline(h=0)
axis(2, at=0:2)
axis(1, at=seq(2, 16, 4))
text(15, 2.1, "(a)")


boxplot(expr, range=0, ylab=expression(paste(log[2], " Intensity")), 
        axes=FALSE, frame=TRUE, ylim=c(3, 16), xlab="Microarray", 
        col=bg, lwd=0.6)
axis(2, at=seq(3, 15, 3))
axis(1, at=c(2, 9.6, 18.5), 
     labels=c("Cont'", "Single KOs", "Double KOs"), cex.axis=0.8)
grid()
text(24, 15.5, "(b)")

pca = prcomp(t(expr))
plot(pca$x[,1], pca$x[,2], 
     col=cols, pch=rep(c(19,8, 2:7), each=3), 
     xlab="Principal Component 1", ylab="Principal Component 2", 
     xlim=c(-50, 50), ylim=c(-50,50), panel.first=grid(),
    axes=FALSE, frame=TRUE)
axis(2, at=seq(-40, 40, 40))
axis(1, at=seq(-40, 40, 40))
text(45, 45, "(c)")
######################################
##QC data
##Second row
######################################
expr = exprs(qc_data)

d = apply(expr, 2, density)
plot(0, 0, xlim=c(2, 16), ylim=c(0, 2.2), 
     xlab=expression(paste(log[2], " Intensity")), ylab="Density", 
     panel.first=grid(), axes=FALSE, frame=TRUE)
for(i in seq_along(d)) {
  lines(d[[i]]$x, d[[i]]$y, col=cols[i], lty=3, lwd=0.5)
}
abline(h=0)
axis(2, at=0:2)
axis(1, at=seq(2, 16, 4))
text(15, 2.1, "(d)")

boxplot(expr, range=0, ylab=expression(paste(log[2], " Intensity")), 
        axes=FALSE, frame=TRUE, ylim=c(3, 16), xlab="Microarray", 
        col=bg, lwd=0.6)
axis(2, at=seq(3, 15, 3))
axis(1, at=c(2, 9.6, 18.5), 
     labels=c("Cont'", "Single KOs", "Double KOs"), cex.axis=0.6)
grid()
text(24, 15.5, "(e)")

pca = prcomp(t(expr))
plot(pca$x[,1], pca$x[,2], 
     col=cols, pch=rep(c(19,8, 2:7), each=3), 
     xlab="Principal Component 1", ylab="Principal Component 2", 
     xlim=c(-50, 50), ylim=c(-50, 50), panel.first=grid(),
     axes=FALSE, frame=TRUE)
axis(2, at=seq(-40, 40, 40))
axis(1, at=seq(-40, 40, 40))
text(45, 45, "(f)")

sink=dev.off()
system("pdfcrop graphics/figure1.pdf")


@


<<echo=FALSE, cache=TRUE>>=
## Figure 2




pdf("graphics/figure2.pdf", width=7, height=3.5)
nf <- layout(matrix(c(0:3,0, rep(0, 5)), nrow=2,ncol=5,byrow = TRUE),
             c(0.15,1,1,1,0.01), c(1, 0.1), TRUE)
#layout.show(nf)

gene_list = topTable(fit2, coef=1, number=nrow(anno_df))
cut_off = abs(gene_list$logFC) > 1 & gene_list$adj.P.Val < 0.05
pch = rep(20, length(gene_list$logFC))
pch[cut_off] = 17


if(colour) { cols =1+(abs(gene_list$logFC) > 1 & gene_list$adj.P.Val < 0.05)
} else { cols = "grey50"}
par(mar=c(0,0,0,0), mgp=c(2,0.4,0), tck=-.01, las=1)
plot(gene_list$logFC, -log10(gene_list$adj.P.Val), 
     col=cols,
     pch= pch,
     xlim=c(-3, 3), ylim=c(0, 20), 
     ylab=expression(paste(-log[10], " p-value")), 
     xlab=expression(paste(log[2], " fold change")), cex=0.6, 
     axes=FALSE, frame=TRUE, panel.first=grid())
abline(v=1, lty=2); abline(v=-1, lty=2); 
abline(h=-log10(0.05), lty=2); 
axis(1, -3:3, -3:3)
axis(2, seq(0, 20, 5), seq(0, 20, 5))
text(3, 19.5, "(a)")
mtext(expression(paste(-log[10], " p-value")), side=2, las=3, cex=0.7, padj=-1.5)

if(colour) { cols =1+(abs(gene_list$logFC) > 1 & gene_list$adj.P.Val < 0.05)
} else { cols =  "grey50"}
gene_list = topTable(fit2, coef=4, number=nrow(anno_df))
plot(gene_list$logFC, -log10(gene_list$adj.P.Val), 
     col=cols,
     pch= pch,
     xlim=c(-3, 3), ylim=c(0, 20), cex=0.6, 
     axes=FALSE, frame=TRUE, panel.first=grid())
     
abline(v=1, lty=2); abline(v=-1, lty=2); 
abline(h=-log10(0.05), lty=2); 
axis(1, -3:3, -3:3);text(3, 19.5, "(b)")
mtext(expression(paste(log[2], " fold change")), side=1, cex=0.7, padj=2)

if(colour) { cols =1+(abs(gene_list$logFC) > 1 & gene_list$adj.P.Val < 0.05)
} else { cols =  "grey50"}
gene_list = topTable(fit2, coef=5, number=nrow(anno_df))
plot(gene_list$logFC, -log10(gene_list$adj.P.Val), 
     col=cols,
     pch= pch,
     xlim=c(-3, 3), ylim=c(0, 20), 
     axes=FALSE, frame=TRUE, panel.first=grid(), cex=0.6)
abline(v=1, lty=2); abline(v=-1, lty=2); 
abline(h=-log10(0.05), lty=2); text(3, 19.5, "(c)")
axis(1, -3:3, -3:3)
sink=dev.off()
system("pdfcrop graphics/figure2.pdf")


@


<<echo=FALSE, cache=TRUE, eval=TRUE>>=
##Figure 3
##Outputting in png format results in silly borders
##So output in pdf, then crop
3*4.5
source("myVennDiagram.R")
results = classifyTestsP(fit2, p.value=0.01)

pdf("graphics/figure3.pdf", width=9, height=3)
nf = layout(matrix(1:3, nrow=1,ncol=3,byrow = TRUE), c(1,1,1), 1,TRUE)
par(mar=c(0, 0, 0,0))
myVennDiagram(results[,c('TF1 - Ctrl', 'TF4 - Ctrl', 'TF1TF4 - TF1 - TF4 + Ctrl')], 
            cex=1.1);text(3.4, 3.4, "(a)")
myVennDiagram(results[,c('TF2 - Ctrl', 'TF4 - Ctrl', 'TF2TF4 - TF2 - TF4 + Ctrl')], 
            cex=1.1, mar=c(0,0,0,0))
text(3.4, 3.4, "(b)")
myVennDiagram(results[,c('TF3 - Ctrl', 'TF4 - Ctrl', 'TF3TF4 - TF3 - TF4 + Ctrl')], 
            cex=1.1, mar=c(0,0,0,0))
text(3.4, 3.4, "(c)")
sink=dev.off()
system("pdfcrop graphics/figure3.pdf")
#system("convert graphics/figure3-crop.pdf graphics/figure3.png")

@


<<echo=FALSE,  eval=FALSE>>=
pdf("graphics/figure4.pdf", width=10, height=8)
par(old_par, mgp=c(0,1,0))
heatmap.2(as.matrix(hm_data), dendrogram='row', Colv=FALSE,
              col=bluered(255), scale="none",key=TRUE, labRow=row_names,
              breaks=breaks, symkey=FALSE, density.info="none", 
              trace="none", cexRow=0.5, cexCol=0.75)
sink=dev.off()
system("pdfcrop graphics/figure4.pdf")
#system("convert -quality 90% graphics/figure4-crop.pdf graphics/figure4.png")

@

